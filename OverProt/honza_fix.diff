diff --git a/OverProt/overprot/libs/lib_similarity_trees/caches.py b/OverProt/overprot/libs/lib_similarity_trees/caches.py
index 1f2f254..526c6c7 100644
--- a/OverProt/overprot/libs/lib_similarity_trees/caches.py
+++ b/OverProt/overprot/libs/lib_similarity_trees/caches.py
@@ -174,7 +174,7 @@ class Range(NamedTuple):
     high: float
 
 
-class DistanceCacheWithRanges(Generic[K, V], DistanceCache[K, V]):
+class DistanceCacheWithRanges(DistanceCache[K, V]):
     def __init__(self, distance_function: Callable[[V, V], float]):
         super().__init__(distance_function)
         self._range_cache: Dict[K, Dict[K, Range]] = {}
diff --git a/OverProt/overprot/libs/lib_similarity_trees/ghtree.py b/OverProt/overprot/libs/lib_similarity_trees/ghtree.py
index a42a9b9..e04a1e8 100644
--- a/OverProt/overprot/libs/lib_similarity_trees/ghtree.py
+++ b/OverProt/overprot/libs/lib_similarity_trees/ghtree.py
@@ -45,7 +45,7 @@ _GHNode = Union[_GHRoot[K], _GHFork[K], _GHLeaf[K]]
 REUSE_PIVOTS = True
 
 
-class GHTree(Generic[K, V], AbstractSimilarityTree[K, V]):
+class GHTree(AbstractSimilarityTree[K, V]):
     def __init__(self, distance_function: Callable[[V, V], float], keys_values: Sequence[Tuple[K, V]] = (), leaf_size: int = 8):
         assert leaf_size >= 1
         self._leaf_size: int = leaf_size
diff --git a/OverProt/overprot/libs/lib_similarity_trees/mtree.py b/OverProt/overprot/libs/lib_similarity_trees/mtree.py
index aeaf356..681b537 100644
--- a/OverProt/overprot/libs/lib_similarity_trees/mtree.py
+++ b/OverProt/overprot/libs/lib_similarity_trees/mtree.py
@@ -40,7 +40,7 @@ _Node = Union[_Fork[K], _Leaf[K]]
 
 _Entry = Union[_ForkEntry[K], _LeafEntry[K]]
 
-class MTree(Generic[K, V], AbstractSimilarityTree[K, V]):
+class MTree(AbstractSimilarityTree[K, V]):
     def __init__(self, distance_function: Callable[[V, V], float], fork_arity: int = 4, leaf_arity: int = 4, update_pivots_on_insert: bool = False):
         self._distance_function: Callable[[V, V], float] = distance_function
         self._fork_arity: int = fork_arity
diff --git a/OverProt/overprot/libs/lib_similarity_trees/nntree.py b/OverProt/overprot/libs/lib_similarity_trees/nntree.py
index 1a22638..10ecda6 100644
--- a/OverProt/overprot/libs/lib_similarity_trees/nntree.py
+++ b/OverProt/overprot/libs/lib_similarity_trees/nntree.py
@@ -393,7 +393,7 @@ class _NNTree(Generic[V]):
             lst.pop()
 
 
-class NNTree(Generic[K, V], AbstractSimilarityTree[K, V]):
+class NNTree(AbstractSimilarityTree[K, V]):
     def __init__(self, distance_function: Callable[[V, V], float], with_nearest_pair_queue: bool = False, **kwargs):
         self._tree = _NNTree(distance_function, with_nearest_pair_queue=with_nearest_pair_queue, **kwargs)
         self._key2index: Dict[K, int] = {}
@@ -452,7 +452,7 @@ class NNTree(Generic[K, V], AbstractSimilarityTree[K, V]):
         self._tree._check_invariants()
 
 
-class _MagicNNTree(Generic[K, V], AbstractSimilarityTree[K, V]):
+class _MagicNNTree(AbstractSimilarityTree[K, V]):
     def __init__(self, *args, **kwargs):
         self._main_tree = NNTree(*args, **kwargs)
         self._helping_tree = NNTree(*args, **kwargs)
